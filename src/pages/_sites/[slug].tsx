import { NextPageContext } from "next";
import Head from "next/head";

interface ISlugProps {
  subdomain: string;
}

export function getServerSideProps(context: NextPageContext) {
  const { req } = context;

  const subDomain = req?.headers.host?.split(".")[0];

  return {
    props: {
      subdomain: subDomain,
    },
  };
}

const TestSlug: React.FC<ISlugProps> = ({ subdomain }: ISlugProps) => {
  return (
    <>
      <Head>
        <title>DetailPad - Slug</title>
        <meta name="description" content="DetailPad Slug" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      Slug
      <br />
      {subdomain}
    </>
  );
};

export default TestSlug;

// interface ISiteWildcardProps {
//   wildcard: string;
// }

// export async function getServerSideProps<ISiteWildcardProps>(
//   context: NextPageContext
// ) {
//   const wildcard = "asd"; //context.req?.headers.host?.split(".")[0];
//   //   let wildcard = context.req.headers.host.split(".")[0];
//   //   wildcard =
//   //     wildcard != "yourdomain"
//   //       ? process.env.NODE_ENV != "development"
//   //         ? wildcard
//   //         : process.env.TEST_WILDCARD
//   //       : "home";
//   return { props: { wildcard } };
// }

// const Site: NextPageWithLayout<ISiteWildcardProps> = (props) => {
//   return (
//     <>
//       <Head>
//         <title>DetailPad - Book</title>
//         <meta name="description" content="Generated by create-t3-app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <div>Booking page for: {props.wildcard}</div>
//     </>
//   );
// };

// export default Site;
